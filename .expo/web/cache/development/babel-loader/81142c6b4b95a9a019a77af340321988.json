{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { auth, db } from \"./firebase\";\nimport { doc, setDoc, Timestamp, collection, getDoc, getDocs, addDoc, onSnapshot } from 'firebase/firestore';\nimport { async, querystring } from '@firebase/util';\nexport var createUserOnRegister = function createUserOnRegister(user, username) {\n  var userRef = doc(db, 'avatars', user.uid);\n  var userData = {\n    email: user.email,\n    username: username,\n    uid: user.uid\n  };\n  return setDoc(userRef, userData);\n};\nexport var getAvatar = function _callee() {\n  var ref, snap, avatar;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ref = doc(db, \"avatars\", auth.currentUser.uid);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getDoc(ref));\n\n        case 3:\n          snap = _context.sent;\n          avatar = snap.data();\n          return _context.abrupt(\"return\", avatar);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["auth","db","doc","setDoc","Timestamp","collection","getDoc","getDocs","addDoc","onSnapshot","async","querystring","createUserOnRegister","user","username","userRef","uid","userData","email","getAvatar","ref","currentUser","snap","avatar","data"],"sources":["/Users/jeandredevilliers/Desktop/Project/FunkySocky/Database.js"],"sourcesContent":["import { auth, db } from \"./firebase\";\nimport  {doc, setDoc, Timestamp, collection, getDoc, getDocs,addDoc, onSnapshot} from 'firebase/firestore';\nimport { async, querystring } from '@firebase/util';\n\n\nexport const createUserOnRegister = (user, username) => {\n\n    const userRef = doc(db, 'avatars', user.uid);\n\n    const userData = {\n        email: user.email,\n        username: username,\n        uid: user.uid\n    }//add own for app\n\n    return setDoc(userRef, userData);\n}\n\nexport const getAvatar = async () => {\n\n    const ref = doc(db, \"avatars\", auth.currentUser.uid);\n    const snap = await getDoc(ref);\n\n    let avatar = snap.data()\n    return avatar;\n\n}"],"mappings":";AAAA,SAASA,IAAT,EAAeC,EAAf;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,UAAjC,EAA6CC,MAA7C,EAAqDC,OAArD,EAA6DC,MAA7D,EAAqEC,UAArE,QAAsF,oBAAtF;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,gBAAnC;AAGA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAOC,QAAP,EAAoB;EAEpD,IAAMC,OAAO,GAAGb,GAAG,CAACD,EAAD,EAAK,SAAL,EAAgBY,IAAI,CAACG,GAArB,CAAnB;EAEA,IAAMC,QAAQ,GAAG;IACbC,KAAK,EAAEL,IAAI,CAACK,KADC;IAEbJ,QAAQ,EAAEA,QAFG;IAGbE,GAAG,EAAEH,IAAI,CAACG;EAHG,CAAjB;EAMA,OAAOb,MAAM,CAACY,OAAD,EAAUE,QAAV,CAAb;AACH,CAXM;AAaP,OAAO,IAAME,SAAS,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAEfC,GAFe,GAETlB,GAAG,CAACD,EAAD,EAAK,SAAL,EAAgBD,IAAI,CAACqB,WAAL,CAAiBL,GAAjC,CAFM;UAAA;UAAA,iCAGFV,MAAM,CAACc,GAAD,CAHJ;;QAAA;UAGfE,IAHe;UAKjBC,MALiB,GAKRD,IAAI,CAACE,IAAL,EALQ;UAAA,iCAMdD,MANc;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAlB"},"metadata":{},"sourceType":"module"}