{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AuthTabs from \"../autocomps/AuthTabs\";\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from \"../../firebase\";\nimport Splash from \"../autocomps/Splash\";\nimport Login from \"../autocomps/Login\";\nimport Register from \"../autocomps/Register\";\nimport CompDetail from \"./CompDetail\";\nimport AddEntry from \"../dashboardcomps/AddEntry\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport default function UserStack() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (user) {\n      if (user) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return _jsx(Stack.Navigator, {\n    children: !loggedIn ? _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Splash\",\n        component: Splash,\n        options: {\n          headerShown: false\n        },\n        style: {\n          backgroundColor: \"#E8D3B4\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        },\n        style: {\n          backgroundColor: \"#E8D3B4\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: Register,\n        options: {\n          headerShown: false\n        },\n        style: {\n          backgroundColor: \"#E8D3B4\"\n        }\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Authentication\",\n        component: AuthTabs,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"CompDetail\",\n        component: CompDetail,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AddEntry\",\n        component: AddEntry,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'green',\n    marginTop: 20\n  },\n  Navbar: {\n    padding: 20,\n    backgroundColor: '#abd5ab',\n    borderWidth: 1\n  },\n  card: {\n    padding: 20,\n    backgroundColor: '#abd5ab',\n    borderWidth: 1,\n    padding: 10,\n    marginTop: 20,\n    borderRadius: 30\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","createBottomTabNavigator","createNativeStackNavigator","AuthTabs","onAuthStateChanged","auth","Splash","Login","Register","CompDetail","AddEntry","Stack","Tab","UserStack","loggedIn","setLoggedIn","unsubscribe","user","headerShown","backgroundColor","styles","StyleSheet","create","container","padding","heading","fontSize","fontWeight","color","marginTop","Navbar","borderWidth","card","borderRadius"],"sources":["/Users/jeandredevilliers/Desktop/Project/FunkySocky/components/dashboardcomps/UserStack.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AuthTabs from '../autocomps/AuthTabs';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport Splash from '../autocomps/Splash';\nimport Login from '../autocomps/Login';\nimport Register from '../autocomps/Register';\nimport CompDetail from './CompDetail';\nimport AddEntry from '../dashboardcomps/AddEntry';\n\n// React.useLayoutEffect(() => {\n//   navigation.setOptions({headerShown: false});\n// }, [navigation]);\n\nconst Stack = createNativeStackNavigator();\n\nconst Tab = createBottomTabNavigator();\n\nexport default function UserStack() {\n\n  const [loggedIn, setLoggedIn] = useState (false);\n\n  \n\n  useEffect(() => {\n      const unsubscribe = onAuthStateChanged(auth, (user) => {\n          if (user) {\n              setLoggedIn(true);\n          } else {\n            setLoggedIn(false);\n          }\n      })\n      return unsubscribe;\n  }, []);\n\n  return (\n\n    <Stack.Navigator>\n    {!loggedIn ? ( \n      <>\n            <Stack.Screen name =\"Splash\" component={Splash} options={{headerShown: false}} style={{backgroundColor: \"#E8D3B4\"}}/>\n             <Stack.Screen name =\"Login\" component={Login} options={{headerShown: false}} style={{backgroundColor: \"#E8D3B4\"}}/>\n             <Stack.Screen name =\"Register\" component={Register} options={{headerShown: false}} style={{backgroundColor: \"#E8D3B4\"}}/>\n    \n      </>\n    ):(\n      <>\n     <Stack.Screen name=\"Authentication\" component={AuthTabs} options={ {headerShown: false}} />\n     <Stack.Screen name=\"CompDetail\" component={CompDetail} options={ {headerShown: false}} />\n     <Stack.Screen name=\"AddEntry\" component={AddEntry} options={ {headerShown: false}} />\n      </>\n      )}\n    </Stack.Navigator>\n   \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n      padding: 20\n    },\nheading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'green',\n    marginTop: 20\n}, \nNavbar:{\n  padding: 20,\n    backgroundColor: '#abd5ab',\n    borderWidth: 1\n},\ncard:{\n    padding: 20,\n    backgroundColor: '#abd5ab',\n    borderWidth: 1,\n    padding: 10,\n    marginTop: 20,\n    borderRadius: 30\n}\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}