{"ast":null,"code":"import React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport login from \"../../assets/login_icon.png\";\nimport regs from \"../../assets/enter.png\";\nimport profile from \"../../assets/user.png\";\nimport comps from \"../../assets/medal.png\";\nimport product from \"../../assets/lamp.png\";\nimport design from \"../../assets/edit.png\";\nimport addnew from \"../../assets/add.png\";\nimport Profile from \"../dashboardcomps/UserDetail\";\nimport Competitions from \"../dashboardcomps/CompList\";\nimport ScoreBoard from \"../dashboardcomps/ScoreBoard\";\nimport { CreateComp } from \"../dashboardcomps/CreateComp\";\nimport CompDetail from \"../dashboardcomps/CompDetail\";\nimport AddEntry from \"../dashboardcomps/AddEntry\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function AuthTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Login\") {\n            iconName = focused;\n            return _jsx(Image, {\n              source: login,\n              style: {\n                width: 20,\n                height: 20\n              }\n            });\n          } else if (route.name === \"Competitions\") {\n            return _jsx(Image, {\n              source: comps,\n              style: {\n                width: 20,\n                height: 20\n              }\n            });\n          } else if (route.name === \"Score Board\") {\n            return _jsx(Image, {\n              source: product,\n              style: {\n                width: 20,\n                height: 20\n              }\n            });\n          } else if (route.name === \"Profile\") {\n            return _jsx(Image, {\n              source: profile,\n              style: {\n                width: 20,\n                height: 20\n              }\n            });\n          } else if (route.name === \"Create Competition\") {\n            return _jsx(Image, {\n              source: addnew,\n              style: {\n                width: 20,\n                height: 20\n              }\n            });\n          }\n        },\n        tabBarActiveTintColor: 'black'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Competitions\",\n      component: Competitions,\n      options: {\n        title: \"Competitions\",\n        headerTintColor: \"#E8D3B4\",\n        headerStyle: {\n          backgroundColor: '#E8D3B4'\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Score Board\",\n      component: ScoreBoard,\n      options: {\n        title: \"Score Board\",\n        headerTintColor: \"#E8D3B4\",\n        headerStyle: {\n          backgroundColor: '#E8D3B4'\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        title: \"Profile\",\n        headerTintColor: \"#E8D3B4\",\n        headerStyle: {\n          backgroundColor: '#E8D3B4'\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Create Competition\",\n      component: CreateComp,\n      options: {\n        title: \"Create Competition\",\n        headerTintColor: \"#E8D3B4\",\n        headerStyle: {\n          backgroundColor: '#E8D3B4'\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","createBottomTabNavigator","login","regs","profile","comps","product","design","addnew","Profile","Competitions","ScoreBoard","CreateComp","CompDetail","AddEntry","Tab","AuthTabs","route","tabBarIcon","focused","color","size","iconName","name","width","height","tabBarActiveTintColor","title","headerTintColor","headerStyle","backgroundColor"],"sources":["/Users/jeandredevilliers/Desktop/Project/FunkySocky/components/autocomps/AuthTabs.js"],"sourcesContent":["import React from 'react';\nimport { Button, Image, Alert, Text } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport login from '../../assets/login_icon.png';\nimport regs from '../../assets/enter.png';\nimport profile from '../../assets/user.png';\nimport comps from '../../assets/medal.png';\nimport product from '../../assets/lamp.png';\nimport design from '../../assets/edit.png';\nimport addnew from '../../assets/add.png';\nimport Profile from '../dashboardcomps/UserDetail';\nimport Competitions from '../dashboardcomps/CompList';\nimport ScoreBoard from '../dashboardcomps/ScoreBoard';\nimport { CreateComp } from '../dashboardcomps/CreateComp';\nimport CompDetail from '../dashboardcomps/CompDetail';\nimport AddEntry from '../dashboardcomps/AddEntry';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function AuthTabs() {\n\n\n  return (\n    \n   \n    <Tab.Navigator \n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n\n        if (route.name === \"Login\"){\n          iconName = focused\n          return <Image source={login} style={{width: 20, height: 20}}/>\n         }else if (route.name === \"Competitions\"){\n          return <Image source= {comps} style={{width: 20, height: 20}}/>\n        }else if (route.name === \"Score Board\"){\n          return <Image source= {product} style={{width: 20, height: 20}}/>\n         } else if (route.name === \"Profile\"){\n          return <Image source= {profile} style={{width: 20, height: 20}}/>\n        } else if (route.name === \"Create Competition\"){\n          return <Image source= {addnew} style={{width: 20, height: 20}}/>\n        }\n        // } else if (route.name === \"AddEntry\"){\n        //   return <Image source= {design} style={{width: 20, height: 20}}/>\n        // } else if (route.name === \"CompDetail\"){\n        //   return <Image source= {design} style={{width: 20, height: 20}}/>\n        // }\n       },\n       tabBarActiveTintColor: 'black'\n   })}>\n\n      \n<Tab.Screen name=\"Competitions\" component={Competitions}options={{title: \"Competitions\", headerTintColor:\"#E8D3B4\", headerStyle: {backgroundColor: '#E8D3B4'}}}/>\n      <Tab.Screen name=\"Score Board\" component={ScoreBoard}options={{title: \"Score Board\", headerTintColor:\"#E8D3B4\", headerStyle: {backgroundColor: '#E8D3B4'}}}/>\n      <Tab.Screen name=\"Profile\" component={Profile} options={{title: \"Profile\", headerTintColor:\"#E8D3B4\", headerStyle: {backgroundColor: '#E8D3B4'}}}/>\n      <Tab.Screen name=\"Create Competition\" component={CreateComp} options={{title: \"Create Competition\", headerTintColor:\"#E8D3B4\", headerStyle: {backgroundColor: '#E8D3B4'}}}/>\n      {/* <Tab.Screen name=\"AddEntry\" component={AddEntry} options={{title: \"AddEntry\", headerTintColor:\"#E8D3B4\", headerStyle: {backgroundColor: '#E8D3B4'}}}/>\n      <Tab.Screen name=\"CompDetail\" component={CompDetail} options={{title: \"CompDetail\", headerTintColor:\"#E8D3B4\", headerStyle: {backgroundColor: '#E8D3B4'}}}/> */}\n    </Tab.Navigator>    \n\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}