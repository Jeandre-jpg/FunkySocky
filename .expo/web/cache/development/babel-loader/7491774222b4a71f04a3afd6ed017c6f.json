{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { NavigationContainer } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport useFonts from \"./assets/hooks/useFonts\";\nimport UserStack from \"./components/dashboardcomps/UserStack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      IsReady = _useState2[0],\n      SetIsReady = _useState2[1];\n\n  var LoadFonts = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(useFonts());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!IsReady) {\n    return _jsx(AppLoading, {\n      startAsync: LoadFonts,\n      onFinish: function onFinish() {\n        return SetIsReady(true);\n      },\n      onError: function onError() {}\n    });\n  }\n\n  SplashScreen.preventAutoHideAsync();\n  setTimeout(SplashScreen.hideAsync, 2000);\n  return _jsx(NavigationContainer, {\n    style: styles.container,\n    children: _jsx(UserStack, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    paddingTop: 50\n  },\n  tabContainer: {\n    marginTop: 30,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"names":["SplashScreen","NavigationContainer","React","useState","AppLoading","useFonts","UserStack","App","IsReady","SetIsReady","LoadFonts","preventAutoHideAsync","setTimeout","hideAsync","styles","container","StyleSheet","create","padding","paddingTop","tabContainer","marginTop","flex","flexDirection","justifyContent"],"sources":["/Users/jeandredevilliers/Desktop/Project/FunkySocky/App.js"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { NavigationContainer } from '@react-navigation/native';\nimport React, {useState} from 'react';\nimport AppLoading from 'expo-app-loading';\nimport useFonts from './assets/hooks/useFonts';\nimport UserStack from './components/dashboardcomps/UserStack';\n\nexport default function App() {\n\n  const [IsReady, SetIsReady] = useState(false);\n\n  const LoadFonts = async () => {\n    await useFonts();\n  };\n\n  if (!IsReady) {\n    return (\n      <AppLoading\n        startAsync={LoadFonts}\n        onFinish={() => SetIsReady(true)}\n        onError={() => {}}\n      />\n    );\n  }\n\n  SplashScreen.preventAutoHideAsync();\n  setTimeout(SplashScreen.hideAsync, 2000);\n\n  return (\n    <NavigationContainer style={styles.container}>\n   <UserStack/>\n   </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    paddingTop: 50\n  },\n  tabContainer:{\n    marginTop: 30,\n      flex: 1,\n      flexDirection:  'row',\n      justifyContent: 'space-between'\n  }\n});\n"],"mappings":";;;;;AACA,OAAO,KAAKA,YAAZ,MAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;EAE5B,gBAA8BJ,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOK,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,SAAS,GAAG;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACVL,QAAQ,EADE;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAIA,IAAI,CAACG,OAAL,EAAc;IACZ,OACE,KAAC,UAAD;MACE,UAAU,EAAEE,SADd;MAEE,QAAQ,EAAE;QAAA,OAAMD,UAAU,CAAC,IAAD,CAAhB;MAAA,CAFZ;MAGE,OAAO,EAAE,mBAAM,CAAE;IAHnB,EADF;EAOD;;EAEDT,YAAY,CAACW,oBAAb;EACAC,UAAU,CAACZ,YAAY,CAACa,SAAd,EAAyB,IAAzB,CAAV;EAEA,OACE,KAAC,mBAAD;IAAqB,KAAK,EAAEC,MAAM,CAACC,SAAnC;IAAA,UACD,KAAC,SAAD;EADC,EADF;AAKD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,OAAO,EAAE,EADA;IAETC,UAAU,EAAE;EAFH,CADoB;EAK/BC,YAAY,EAAC;IACXC,SAAS,EAAE,EADA;IAETC,IAAI,EAAE,CAFG;IAGTC,aAAa,EAAG,KAHP;IAITC,cAAc,EAAE;EAJP;AALkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}